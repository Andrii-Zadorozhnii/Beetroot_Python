print('\n1. –ü–æ—Ç–æ–∫–∏ (threading)\n')
#
# –ü–æ—Ç–æ–∫–∏ –ø–æ–ª–µ–∑–Ω—ã, –∫–æ–≥–¥–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –º–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ (I/O), —Ç–∞–∫–∏—Ö –∫–∞–∫ —Ä–∞–±–æ—Ç–∞ —Å —Å–µ—Ç—å—é, —Ñ–∞–π–ª–æ–≤—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
#
# üîπ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
# 	‚Ä¢	–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
# 	‚Ä¢	–≠–∫–æ–Ω–æ–º–∏—è –ø–∞–º—è—Ç–∏ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏.
# 	‚Ä¢	–•–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∑–∞–¥–∞—á —Å I/O (—Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã, —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏).
#
# üîπ –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
# 	‚Ä¢	GIL (Global Interpreter Lock) ‚Äì —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å Python-–∫–æ–¥ –≤ –æ–¥–∏–Ω –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏.
# 	‚Ä¢	–ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω –¥–ª—è –∑–∞–¥–∞—á, —Ç—Ä–µ–±—É—é—â–∏—Ö –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.
#

import threading
import time


def task(name):
    print(f"–ó–∞–ø—É—Å–∫ {name}")
    time.sleep(2)
    print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ {name}")


threads = []
for i in range(3):
    thread = threading.Thread(target=task, args=(f"–ü–æ—Ç–æ–∫ {i}",))
    threads.append(thread)
    thread.start()

for thread in threads:
    thread.join()

print("–í—Å–µ –ø–æ—Ç–æ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã")

print('\n2. –ü—Ä–æ—Ü–µ—Å—Å—ã (multiprocessing)\n')
#
# –ü—Ä–æ—Ü–µ—Å—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω—ã–µ —è–¥—Ä–∞. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ç—Ä–∞—Ç–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø–æ—Ç–æ–∫–æ–≤.
#
# üîπ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
# 	‚Ä¢	–ù–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å GIL ‚Äì –∫–∞–∂–¥—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∏–º–µ–µ—Ç —Å–≤–æ–π Python-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä.
# 	‚Ä¢	–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–≥–æ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä.
#
# üîπ –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
# 	‚Ä¢	–ë–æ–ª—å—à–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø–æ—Ç–æ–∫–∞–º–∏.
# 	‚Ä¢	–ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ (–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ—á–µ—Ä–µ–¥–∏, –ø–∞–π–ø—ã –∏ shared memory).
#
# üìå –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:

import multiprocessing
import time


def task(name):
    print(f"–ó–∞–ø—É—Å–∫ {name}")
    time.sleep(2)
    print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ {name}")


processes = []
for i in range(3):
    process = multiprocessing.Process(target=task, args=(f"–ü—Ä–æ—Ü–µ—Å—Å {i}",))
    processes.append(process)
    process.start()

for process in processes:
    process.join()

print("–í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã")

print('\n3. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å (asyncio)\n')
#
# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ—Ä—É—Ç–∏–Ω—ã –∏ —Å–æ–±—ã—Ç–∏–π–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞. –≠—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø–æ—Ç–æ–∫–∏, –Ω–æ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.
#
# üîπ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
# 	‚Ä¢	–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ I/O-–æ–ø–µ—Ä–∞—Ü–∏–π –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
# 	‚Ä¢	–•–æ—Ä–æ—à–æ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç—Å—è.
# 	‚Ä¢	–õ–µ–≥—á–µ —É–ø—Ä–∞–≤–ª—è—Ç—å, —á–µ–º –ø–æ—Ç–æ–∫–∞–º–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏.
#
# üîπ –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
# 	‚Ä¢	–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è CPU-–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á.
# 	‚Ä¢	–¢—Ä–µ–±—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, aiohttp –¥–ª—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤).
#
# üìå –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è asyncio:

import asyncio


async def task(name):
    print(f"–ó–∞–ø—É—Å–∫ {name}")
    await asyncio.sleep(2)
    print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ {name}")


async def main():
    tasks = [task(f"–ó–∞–¥–∞—á–∞ {i}") for i in range(3)]
    await asyncio.gather(*tasks)


asyncio.run(main())
