-- Введение в SQL: Создать базу данных, таблицу и заполнить её данными.

-- CREATE TABLE test_person
-- (
--     id                 INT PRIMARY KEY NOT NULL,
--     person_name        VARCHAR(15)     NOT NULL,
--     person_family_name VARCHAR(15)     NOT NULL,
--     person_age         INT,
--
-- );

-- INSERT INTO test_person VALUES (1, 'Andrii', 'Zadorozhnii', 32),
-- INSERT INTO test_person VALUES (2, 'Andrii', 'Zadorozhnii', 19),
-- INSERT INTO test_person VALUES (3, 'Igor', 'Petrov', 22)
-- INSERT INTO test_person VALUES (4, 'Pavel', 'Prudniy', 26)
-- INSERT INTO test_person VALUES (5, 'Slava', 'kozak', 19)

-- SELECT: Написать простые запросы на выборку данных.
--
-- Фильтрация (WHERE): Использовать операторы =, !=, >, <, BETWEEN, LIKE.
--
-- Сортировка (ORDER BY): Упорядочить данные по возрастанию и убыванию.
--
-- Агрегатные функции: Использовать COUNT, SUM, AVG, MIN, MAX.
--
-- Группировка (GROUP BY, HAVING): Группировать данные и фильтровать их.
--
-- Операторы объединения (JOIN): Внутренние (INNER JOIN) и внешние (LEFT JOIN, RIGHT JOIN, FULL JOIN) соединения.
--
-- Оператор UNION: Объединение результатов нескольких запросов.
--
-- Ограничение количества строк (LIMIT, OFFSET): Выборка первых N записей.
--
-- Подзапросы: Использование подзапросов в SELECT, FROM, WHERE.
--
-- Блок 2: Работа с данными
--
-- INSERT, UPDATE, DELETE: Добавление, обновление и удаление данных.
--
-- Ограничения (Constraints): PRIMARY KEY, FOREIGN KEY, UNIQUE, CHECK, DEFAULT.
--
-- Транзакции: BEGIN, COMMIT, ROLLBACK.
--
-- Индексы: Создание и использование индексов (CREATE INDEX).
--
-- Представления (VIEW): Создание и использование представлений (CREATE VIEW).
--
-- Хранимые процедуры: Создание простых хранимых процедур на PL/pgSQL.
--
-- Триггеры: Написание триггеров для автоматического выполнения операций.
--
-- Функции: Создание пользовательских SQL-функций.
--
-- Роли и права доступа: GRANT, REVOKE, работа с пользователями.
--
-- Оптимизация запросов: Разбор плана выполнения (EXPLAIN ANALYZE).
--
-- Блок 3: Продвинутые темы
--
-- Многотабличные запросы: Разбор сложных соединений нескольких таблиц.
--
-- CTE (WITH): Использование общих табличных выражений.
--
-- Массивы в PostgreSQL: Работа с массивами, функции unnest().
--
-- JSON в PostgreSQL: Использование JSON и JSONB, работа с ->, ->>.
--
-- Full-Text Search: Реализация полнотекстового поиска (tsvector, tsquery).
--
-- Репликация: Основы настройки репликации данных в PostgreSQL.
--
-- Партиционирование таблиц: Разделение таблиц для улучшения производительности.
--
-- Материализованные представления: CREATE MATERIALIZED VIEW и их обновление.
--
-- PL/pgSQL: Написание сложных функций и процедур.
--
-- Бэкап и восстановление: Использование pg_dump и pg_restore.