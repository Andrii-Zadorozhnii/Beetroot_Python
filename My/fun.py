import asyncio
import aiohttp
import random


async def fetch_exchange_rate() -> float:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å –æ–±–º–µ–Ω–∞ RON -> UAH –∏–∑ API.

    :return: –ö—É—Ä—Å –æ–±–º–µ–Ω–∞ (—Å–∫–æ–ª—å–∫–æ UAH –∑–∞ 1 RON)
    """
    url = "https://api.exchangerate-api.com/v4/latest/RON"

    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            data = await response.json()
            return data["rates"]["UAH"]  # –î–æ—Å—Ç–∞—ë–º –∫—É—Ä—Å RON -> UAH


async def calculate_price() -> float:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç —Ü–µ–Ω—É –∫–æ–ª–µ—Å —Å–∞–º–æ–∫–∞—Ç–∞ –≤ –≥—Ä–∏–≤–Ω–∞—Ö.

    :return: –¶–µ–Ω–∞ –∫–æ–ª–µ—Å –≤ UAH
    """
    price_ron = 175  # –¶–µ–Ω–∞ –≤ –ª–µ—è—Ö

    exchange_rate = await fetch_exchange_rate()
    price_uah = price_ron * exchange_rate

    print(
        "–¶–µ–Ω–∞ –∫–æ–ª–µ—Å —Å–∞–º–æ–∫–∞—Ç–∞ –≤ –≥—Ä–∏–≤–Ω–∞—Ö:", round(price_uah, 2)
    )

    return price_uah


async def calculate_wear_rate() -> None:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å –∫–æ–ª–µ—Å —Å–∞–º–æ–∫–∞—Ç–∞.
    """
    total_distance = 5000  # –ó–∞–º–µ–Ω–∞ –∫–∞–∂–¥—ã–µ 5000 –∫–º
    avg_speed = random.randint(40, 50)  # –°–ª—É—á–∞–π–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 40-50 –∫–º/—á

    hours_until_replacement = total_distance / avg_speed  # –ß–∞—Å—ã –¥–æ –∑–∞–º–µ–Ω—ã

    print(
        "üìå –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å:", avg_speed, "–∫–º/—á"
    )
    print(
        "‚åõ –ú–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ", round(hours_until_replacement, 2), "—á–∞—Å–æ–≤ –¥–æ –∑–∞–º–µ–Ω—ã –∫–æ–ª–µ—Å."
    )
    print(
        "üö≤ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–≥ –±–µ–∑ –∑–∞–º–µ–Ω—ã:", total_distance, "–∫–º"
    )


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ü–µ–Ω—É –∏ –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å.
    """
    await calculate_price()
    await calculate_wear_rate()


# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏
asyncio.run(main())
