# Задание 1
#
# Практика импорта
#
# Создайте каталог с двумя модулями; создайте функцию в одном из них;
# затем импортируйте эту функцию в другой модуль и используйте ее в выбранном вами скрипте.





# Задание 2
#
# Модуль sys.
#
#  Список «sys.path» инициализируется из переменной среды PYTHONPATH.
# Можно ли изменить его из Python?
# Если да, то влияет ли это на то, где Python ищет файлы модулей?
# Запустите несколько интерактивных тестов, чтобы выяснить это.
#
#
# Задание 3
#
# Основы, импорт, работа с модулем ОС
#
# Напишите программу, которая подсчитывает строки и символы в файле
# (аналогично Unix-утилите `wc`, для получения дополнительной информации о ней перейдите по ссылке:
# https://www.geeksforgeeks.org/wc-command-linux-examples/ или, если у вас macOS или Linux
# - просто вызовите руководство к этой утилите с помощью команды: `man wc`).
#
# Создайте модуль Python под названием «mymod.py», который имеет три функции:
#
# Функция count_lines(name), которая считывает входной файл и подсчитывает количество строк в нем
# (подсказка: file.readlines() выполняет большую часть работы за вас, а «len» делает все остальное)
# Функция count_chars(name), которая считывает входной файл и подсчитывает количество символов в нем
# (подсказка: file.read() возвращает одну строку)
# Функция test(name), которая вызывает обе функции подсчета с заданным входным именем файла.
# Такое имя файла обычно может быть передано, жестко закодировано, введено с помощью input() или извлечено из командной строки через список sys.argv;
# на данный момент предположим, что это переданный аргумент функции.
# Все три функции `mymod.py` должны ожидать передачи строки имени файла.
#
# Протестируйте свой модуль в интерактивном режиме, используя импорт и квалификацию имени для извлечения ваших экспортов.
#
# Должен ли ваш PYTHONPATH включать каталог, в котором вы создали mymod.py?
#
# Попробуйте запустить свой модуль сам по себе: например, test("mymod.py"). Обратите внимание, что тест открывает файл дважды; если вы амбициозны, вы можете улучшить это, передав объект открытого файла в две функции подсчета (подсказка: file.seek(0) — это перемотка файла).